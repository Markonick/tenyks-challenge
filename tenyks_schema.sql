--
-- Database schema for Tenyks Challenge
--

CREATE SCHEMA IF NOT EXISTS tenyks;

CREATE TABLE IF NOT EXISTS tenyks.dataset (
    id SMALLINT GENERATED BY DEFAULT AS IDENTITY,
    uuid miaiq.uuid_type,
    name miaiq.name_type,
    description TEXT,
    PRIMARY KEY (id),
    UNIQUE (uuid)
);
COMMENT ON TABLE miaiq.sop_class IS 'DICOM image types that the system can analyze.';
COMMENT ON COLUMN miaiq.sop_class.name IS 'Abbreviated name for the image class, e.g. FFDM or DBT.';
COMMENT ON COLUMN miaiq.sop_class.uuid IS 'Maximum length of UUID in DICOM is 64 characters.';

INSERT INTO tenyks.model  (id, uuid, name, description)
VALUES
    (1, '1.2.840.10008.5.1.4.1.1.1.2', 'FFDM', 'Digital Mammography X-Ray Image Storage For Presentation'),
    (2, '1.2.840.10008.5.1.4.1.1.13.1.3', 'DBT', 'Breast Tomosynthesis Image Storage')
ON CONFLICT (id) DO NOTHING;


CREATE TABLE IF NOT EXISTS miaiq.laterality(
    id SMALLINT GENERATED BY DEFAULT AS IDENTITY,
    value VARCHAR(1) NOT NULL,
    description TEXT,
    PRIMARY KEY (id),
    UNIQUE (value)
);
COMMENT ON COLUMN miaiq.laterality.description IS 'Language-neutral description of laterality (e.g. left).';

INSERT INTO miaiq.laterality (id, value, description)
VALUES
    (1, 'L', 'left'),
    (2, 'R', 'right')
ON CONFLICT (id) DO NOTHING;


CREATE TABLE IF NOT EXISTS miaiq.view_position(
    id SMALLINT GENERATED BY DEFAULT AS IDENTITY,
    value VARCHAR(4) NOT NULL,
    srt_code VARCHAR(7) NOT NULL,
    description TEXT,
    PRIMARY KEY (id),
    UNIQUE (value),
    UNIQUE (srt_code)
);
COMMENT ON COLUMN miaiq.view_position.value IS 'ACR MQCM 1999 code (e.g. CC, MLO).';
COMMENT ON COLUMN miaiq.view_position.srt_code IS 'Code value as per coding scheme SRT (e.g. R-10242 for CC, or R-10226 for MLO).';
COMMENT ON COLUMN miaiq.view_position.description IS 'Language-neutral description of code meaning (e.g. cranio-caudal).';

-- see http://dicom.nema.org/medical/Dicom/2014c/output/chtml/part16/sect_CID_4014.html
INSERT INTO miaiq.view_position (id, value, srt_code, description)
VALUES
    (1,  'CC',   'R-10242', 'cranio-caudal'),
    (2,  'FB',   'R-10244', 'caudo-cranial (from below)'),
    (3,  'ISO',  'R-40AAA', 'inferomedial to superolateral oblique'),
    (4,  'LM',   'R-10228', 'latero-medial'),
    (5,  'LMO',  'R-10230', 'latero-medial oblique'),
    (6,  'ML',   'R-10224', 'medio-lateral'),
    (7,  'MLO',  'R-10226', 'mediolateral oblique'),
    (8,  'SIO',  'R-102D0', 'superolateral to inferomedial oblique'),
    (9,  'XCCL', 'R-1024A', 'cranio-caudal exaggerated laterally'),
    (10, 'XCCM', 'R-1024B', 'cranio-caudal exaggerated medially')
ON CONFLICT (id) DO NOTHING;


CREATE TABLE IF NOT EXISTS miaiq.breast_size(
    id SMALLINT GENERATED BY DEFAULT AS IDENTITY,
    value miaiq.name_type,
    PRIMARY KEY (id),
    UNIQUE (value)
);
COMMENT ON COLUMN miaiq.breast_size.value IS 'Language-neutral description of breast size.';

INSERT INTO miaiq.breast_size (id, value)
VALUES
    (1, 'small'),
    (2, 'medium'),
    (3, 'large')
ON CONFLICT (id) DO NOTHING;


CREATE TABLE IF NOT EXISTS miaiq.criteria_set(
    id INT GENERATED BY DEFAULT AS IDENTITY,
    name miaiq.name_type,
    description TEXT,
    PRIMARY KEY (id),
    UNIQUE (name)
);
COMMENT ON TABLE miaiq.criteria_set IS 'Identifies a set of criteria that may be used at a site.';
COMMENT ON COLUMN miaiq.criteria_set.name IS 'Abbreviated name for the criteria set, e.g. LRCB or US.';
COMMENT ON COLUMN miaiq.criteria_set.description IS 'Details related to the criteria set. This is typically not shown in a user interface.';

INSERT INTO miaiq.criteria_set (id, name)
VALUES
    (1, 'LRCB'),
    (2, 'US')
ON CONFLICT (id) DO NOTHING;


CREATE TABLE IF NOT EXISTS miaiq.breast_size_threshold(
    id SMALLINT GENERATED BY DEFAULT AS IDENTITY,
    criteria_set_id INT NOT NULL,
    breast_size_id SMALLINT NOT NULL,
    view_position_id SMALLINT NOT NULL,
    lower_bound REAL NOT NULL,
    upper_bound REAL NOT NULL,
    PRIMARY KEY (id),
    CONSTRAINT fk_miaiq_breast_size_threshold_criteria_set FOREIGN KEY (criteria_set_id) REFERENCES miaiq.criteria_set(id),
    CONSTRAINT fk_miaiq_breast_size_threshold_view_position FOREIGN KEY (view_position_id) REFERENCES miaiq.view_position(id),
    CONSTRAINT fk_miaiq_breast_size_threshold_breast_size FOREIGN KEY (breast_size_id) REFERENCES miaiq.breast_size(id)
);

INSERT INTO miaiq.breast_size_threshold (criteria_set_id, breast_size_id, view_position_id, lower_bound, upper_bound)
VALUES
    (1, 1, 1, 90.0, 200.0),
    (1, 2, 1, 120.0, 200.0),
    (1, 3, 1, 120.0, 240.0),
    (1, 1, 7, 90.0, 200.0),
    (1, 2, 7, 120.0, 200.0),
    (1, 3, 7, 120.0, 240.0),
    (2, 1, 1, 60.0, 80.0),
    (2, 2, 1, 60.0, 80.0),
    (2, 3, 1, 60.0, 80.0),
    (2, 1, 7, 80.0, 120.0),
    (2, 2, 7, 80.0, 120.0),
    (2, 3, 7, 80.0, 120.0)
ON CONFLICT (id) DO NOTHING;


CREATE TABLE IF NOT EXISTS miaiq.criterion(
    id SMALLINT GENERATED BY DEFAULT AS IDENTITY,
    criteria_set_id INT NOT NULL,
    miaiq_id VARCHAR(64) NOT NULL,
    view_position_id SMALLINT NOT NULL,
    name miaiq.name_type,
    PRIMARY KEY (id),
    UNIQUE (criteria_set_id, miaiq_id),
    CONSTRAINT fk_miaiq_criterion_criteria_set FOREIGN KEY (criteria_set_id) REFERENCES miaiq.criteria_set(id),
    CONSTRAINT fk_miaiq_criterion_view_position FOREIGN KEY (view_position_id) REFERENCES miaiq.view_position(id)
);
COMMENT ON TABLE miaiq.criterion IS 'Criteria for assessing images like CC-L or MLO-R.';
COMMENT ON COLUMN miaiq.criterion.miaiq_id IS 'Machine Learning Team identifier for the crierion, see <https://kheiron.atlassian.net/wiki/spaces/TECH/pages/2732195936/Geography+Mappings>.';

WITH vars AS (SELECT
    (SELECT id FROM miaiq.criteria_set WHERE name = 'LRCB') AS lrcb,
    (SELECT id FROM miaiq.criteria_set WHERE name = 'US') AS us,
    (SELECT id FROM miaiq.view_position WHERE value = 'CC') AS cc,
    (SELECT id FROM miaiq.view_position WHERE value = 'MLO') AS mlo
)
INSERT INTO miaiq.criterion (criteria_set_id, miaiq_id, view_position_id, name)
VALUES
    ((SELECT lrcb FROM vars), 'NoPectoralMuscle', (SELECT cc FROM vars), 'No Pectoral Muscle'),
    ((SELECT lrcb FROM vars), 'CCNippleNotInProfile', (SELECT cc FROM vars), 'Nipple Not In Profile'),
    ((SELECT lrcb FROM vars), 'NippleNotCentered', (SELECT cc FROM vars), 'Nipple Not Centered'),
    ((SELECT lrcb FROM vars), 'InsufficientMedialPart', (SELECT cc FROM vars), 'Insufficient Medial Part'),
    ((SELECT lrcb FROM vars), 'CCInsufficientSpreadOut', (SELECT cc FROM vars), 'Insufficient Spread Out'),
    ((SELECT lrcb FROM vars), 'CCBlur', (SELECT cc FROM vars), 'Blur'),
    ((SELECT lrcb FROM vars), 'InsufficientLateralPart', (SELECT cc FROM vars), 'Insufficient Lateral Part'),
    ((SELECT lrcb FROM vars), 'CCLessImagedThanPrevious', (SELECT cc FROM vars), 'Less Imaged Than Previous'),
    ((SELECT lrcb FROM vars), 'CCAsymmetry', (SELECT cc FROM vars), 'Asymmetry'),
    ((SELECT lrcb FROM vars), 'LateralFolds', (SELECT cc FROM vars), 'Lateral Folds'),
    ((SELECT lrcb FROM vars), 'MedialFolds', (SELECT cc FROM vars), 'Medial Folds'),
    ((SELECT lrcb FROM vars), 'CentralFolds', (SELECT cc FROM vars), 'Central Folds'),
    ((SELECT lrcb FROM vars), 'NoInfraMammaryAngle', (SELECT mlo FROM vars), 'No Inframammary Angle'),
    ((SELECT lrcb FROM vars), 'BuckySetInCenter', (SELECT mlo FROM vars), 'Bucky Not Set In Center'), -- Wording doas not match
    ((SELECT lrcb FROM vars), 'PectoralMuscleInsufficientWide', (SELECT mlo FROM vars), 'Pectoral Muscle Insufficient Wide'),
    ((SELECT lrcb FROM vars), 'MLOBlur', (SELECT mlo FROM vars), 'Blur'),
    ((SELECT lrcb FROM vars), 'MLONippleNotInProfile', (SELECT mlo FROM vars), 'Nipple Not In Profile'),
    ((SELECT lrcb FROM vars), 'PectoralMuscleNotAtNippleLevel', (SELECT mlo FROM vars), 'Pectoral Muscle Not At Nipple Level'),
    ((SELECT lrcb FROM vars), 'MLOInsufficientSpreadOut', (SELECT mlo FROM vars), 'Insufficient Spread Out'),
    ((SELECT lrcb FROM vars), 'MLOLessImagedThanPrevious', (SELECT mlo FROM vars), 'Less Imaged Than Previous'),
    ((SELECT lrcb FROM vars), 'MLOAsymmetry', (SELECT mlo FROM vars), 'Asymmetry'),
    ((SELECT lrcb FROM vars), 'FoldsInfraMammaryAngle', (SELECT mlo FROM vars), 'Folds Inframammary'),
    ((SELECT lrcb FROM vars), 'FoldsPectoralMuscle', (SELECT mlo FROM vars), 'Folds Pectoral'),
    ((SELECT us FROM vars), 'NoPectoralMuscle', (SELECT cc FROM vars), 'PM Not Visualized'),
    ((SELECT us FROM vars), 'InsufficientLateralPart', (SELECT cc FROM vars), 'Lateral Breast Tissue Excluded'),
    ((SELECT us FROM vars), 'NippleNotCentered', (SELECT cc FROM vars), 'Nipple Not Centered'),
    ((SELECT us FROM vars), 'InsufficientMedialPart', (SELECT cc FROM vars), 'Cleavage Not Visualized And Insufficient Medial Breast Tissue'),
    ((SELECT us FROM vars), 'CCNippleNotInProfile', (SELECT cc FROM vars), 'Nipple Not In Profile'),
    ((SELECT us FROM vars), 'FoldsCombination', (SELECT cc FROM vars), 'Problematic Folds'),
    ((SELECT us FROM vars), 'CCBlur', (SELECT cc FROM vars), 'Motion Present'),
    -- ((SELECT us FROM vars), 'CC_16', (SELECT cc FROM vars), 'Problematic Patient Related Artifact'),
    ((SELECT us FROM vars), 'PNLInsufficientComparedToMLO', (SELECT cc FROM vars), 'PNL On CC Insufficient Compared To MLO view'),
    ((SELECT us FROM vars), 'PectoralMuscleInsufficientWide', (SELECT mlo FROM vars), 'Insufficiently Wide Pectoral Muscle'),
    ((SELECT us FROM vars), 'AnteriorPMMarginIsConcave', (SELECT mlo FROM vars), 'Anterior Margin Of PM Is Concave'),
    ((SELECT us FROM vars), 'NoInfraMammaryAngle', (SELECT mlo FROM vars), 'Insufficient Inframammary Angle'),
    -- ((SELECT us FROM vars), 'MLO_03', (SELECT mlo FROM vars), 'Insufficient Length Of Pectoral Muscle To PNL'),
    ((SELECT us FROM vars), 'PectoralMuscleNotAtNippleLevel', (SELECT mlo FROM vars), 'Pectoral Muscle Not At Nipple Level'),
    ((SELECT us FROM vars), 'ProblematicFolds', (SELECT mlo FROM vars), 'Problematic Folds'),
    ((SELECT us FROM vars), 'MLONippleNotInProfile', (SELECT mlo FROM vars), 'Nipple Not In Profile'),
    ((SELECT us FROM vars), 'MLOInsufficientSpreadOut', (SELECT mlo FROM vars), 'Breast Is Drooping'),
    -- ((SELECT us FROM vars), 'MLO_09', (SELECT mlo FROM vars), 'Bucky Not Properly Centered'),
    ((SELECT us FROM vars), 'USBuckySetInCenter', (SELECT mlo FROM vars), 'Bucky Not Set In Center'),
    ((SELECT us FROM vars), 'MLOBlur', (SELECT mlo FROM vars), 'Motion Present'),
    -- ((SELECT us FROM vars), 'MLO_17', (SELECT mlo FROM vars), 'Problematic Patient Related Artifact'),
    ((SELECT us FROM vars), 'TissueNotVisualized', (SELECT mlo FROM vars), 'Tissue Not Visualized Back To Retromammary Fat Space');


CREATE TABLE IF NOT EXISTS tenyks.model(
    id INT GENERATED BY DEFAULT AS IDENTITY,
    name VARCHAR(64),
    criteria_set_id INT NOT NULL,
    version_major INT NOT NULL,
    version_minor INT NOT NULL,
    PRIMARY KEY (id),
    UNIQUE (name, version_major, version_minor),
    CONSTRAINT fk_miaiq_model_criteria_set FOREIGN KEY (criteria_set_id) REFERENCES miaiq.criteria_set(id)
);
COMMENT ON TABLE miaiq.model IS
    'Machine learning model that is responsible for assessing images as per a set of criteria. '
    'Successive model versions must be backwards compatible as per the interpretation of the criteria, i.e. MLO_06 must be understood in the same way for all model versions of a criteria set, or not supported at all in specific model versions.';

WITH vars AS (SELECT
    (SELECT id FROM miaiq.criteria_set WHERE name = 'LRCB') AS lrcb,
    (SELECT id FROM miaiq.criteria_set WHERE name = 'US') AS us
)
INSERT INTO miaiq.model (id, name, criteria_set_id, version_major, version_minor)
VALUES
    (1, 'EU', (SELECT lrcb FROM vars), 1, 1),
    (2, 'US', (SELECT us FROM vars), 1, 1)
ON CONFLICT (id) DO NOTHING;




CREATE TABLE IF NOT EXISTS miaiq.site(
    id INT GENERATED BY DEFAULT AS IDENTITY,
    organization_id INT NOT NULL,
    name miaiq.name_type,
    description TEXT,
    created_at TIMESTAMP,
    criteria_set_id INT NOT NULL,
    PRIMARY KEY (id),
    UNIQUE (organization_id, name),
    CONSTRAINT fk_miaiq_site_organization FOREIGN KEY (organization_id) REFERENCES miaiq.organization(id),
    CONSTRAINT fk_miaiq_site_criteria_set FOREIGN KEY (criteria_set_id) REFERENCES miaiq.criteria_set(id)
);
COMMENT ON TABLE miaiq.site IS 'A hospital environment or screening site that the technical recall project is integrated with.';
COMMENT ON COLUMN miaiq.site.organization_id IS 'The broader organization the site belongs to.';
COMMENT ON COLUMN miaiq.site.criteria_set_id IS 'Set of criteria used at this site.';


CREATE TABLE IF NOT EXISTS miaiq.technician(
    id INT GENERATED BY DEFAULT AS IDENTITY,
    site_id INT NOT NULL,
    --role_id INT NOT NULL,
    name miaiq.name_type,
    PRIMARY KEY (id),
    UNIQUE (site_id, name),
    --CONSTRAINT fk_miaiq_user_role FOREIGN KEY (role_id) REFERENCES miaiq.user_role(id),
    CONSTRAINT fk_miaiq_user_site FOREIGN KEY (site_id) REFERENCES miaiq.site(id)
);


CREATE TABLE IF NOT EXISTS miaiq.patient(
    id INT GENERATED BY DEFAULT AS IDENTITY,
    uuid miaiq.uuid_type NOT NULL,
    PRIMARY KEY (id),
    UNIQUE (uuid)
);
COMMENT ON TABLE miaiq.patient IS 'An entity that is used to group studies, corresponding to "Patient Level" in DICOM.';
COMMENT ON COLUMN miaiq.patient.uuid IS 'UUID extracted from the DICOM source, it is a user responsibility to anonymize it. Maximum length of UUID in DICOM is 64 characters.';


CREATE TABLE IF NOT EXISTS miaiq.study(
    id INT GENERATED BY DEFAULT AS IDENTITY,
    site_id INT NOT NULL,
    patient_id INT NOT NULL,
    uuid miaiq.uuid_type NOT NULL,
    study_date TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE (uuid),
    CONSTRAINT fk_miaiq_study_site FOREIGN KEY (site_id) REFERENCES miaiq.site(id),
    CONSTRAINT fk_miaiq_study_patient FOREIGN KEY (patient_id) REFERENCES miaiq.patient(id)
);
COMMENT ON TABLE miaiq.study IS 'Groups images that belong together in a study. A study may have a prior image (e.g. based on patient ID and study date).';
COMMENT ON COLUMN miaiq.study.uuid IS 'Maximum length of UUID in DICOM is 64 characters.';


CREATE TABLE IF NOT EXISTS miaiq.image(
    id INT GENERATED BY DEFAULT AS IDENTITY,
    study_id INT NOT NULL,
    uuid miaiq.uuid_type,
    laterality_id SMALLINT NOT NULL,
    view_position_id SMALLINT NOT NULL,
    dicom_url miaiq.url_type,
    breast_size_id SMALLINT,
    image_url miaiq.url_type NOT NULL,
    -- image_width SMALLINT NOT NULL,
    -- image_height SMALLINT NOT NULL,
    thumb_url miaiq.url_type NOT NULL,
    -- thumb_width SMALLINT,
    -- thumb_height SMALLINT,
    compression_force FLOAT,
    technician_id INT,
    sop_class_id INT,
    PRIMARY KEY (id),
    UNIQUE (uuid),
    CONSTRAINT fk_miaiq_image_study FOREIGN KEY (study_id) REFERENCES miaiq.study(id),
    CONSTRAINT fk_miaiq_image_laterality FOREIGN KEY (laterality_id) REFERENCES miaiq.laterality(id),
    CONSTRAINT fk_miaiq_image_view_position FOREIGN KEY (view_position_id) REFERENCES miaiq.view_position(id),
    CONSTRAINT fk_miaiq_image_breast_size FOREIGN KEY (breast_size_id) REFERENCES miaiq.breast_size(id),
    CONSTRAINT fk_miaiq_image_sop_class FOREIGN KEY (sop_class_id) REFERENCES miaiq.sop_class(id),
    CONSTRAINT fk_miaiq_image_technician FOREIGN KEY (technician_id) REFERENCES miaiq.technician(id)
);
COMMENT ON TABLE miaiq.image IS 'Stores all relevant image metadata.';
COMMENT ON COLUMN miaiq.image.uuid IS 'SOP Instance UUID. Maximum length of UUID in DICOM is 64 characters.';
COMMENT ON COLUMN miaiq.image.dicom_url IS 'URL to original DICOM image (NULL if we have no permission to store the image)';
COMMENT ON COLUMN miaiq.image.image_url IS 'URL to pre-processed PNG image.';
COMMENT ON COLUMN miaiq.image.thumb_url IS 'URL to scaled-down version of pre-processed PNG image.';
COMMENT ON COLUMN miaiq.image.compression_force IS 'DICOM "Compression Force" attribute value (expressed in newtons).';


CREATE TABLE IF NOT EXISTS miaiq.case(
    id INT GENERATED BY DEFAULT AS IDENTITY,
    latest_study_id INT NOT NULL,
    prior_study_id INT,
    PRIMARY KEY (id),
    CONSTRAINT fk_miaiq_case_latest_study FOREIGN KEY (latest_study_id) REFERENCES miaiq.study(id),
    CONSTRAINT fk_miaiq_case_prior_study FOREIGN KEY (prior_study_id) REFERENCES miaiq.study(id)
);
COMMENT ON TABLE miaiq.case IS 'Constitutes a logical grouping of images, e.g. four images of a study fed to a machine learning model.';
COMMENT ON COLUMN miaiq.case.latest_study_id IS 'The latest DICOM study this case draws images from. The case may not include all images from that study. This is a convenience field to speed up lookups.';
COMMENT ON COLUMN miaiq.case.prior_study_id IS 'The immediate prior DICOM study this case draws images from. The case may not include all images from that study. This is a convenience field to speed up lookups.';


CREATE TABLE IF NOT EXISTS miaiq.case_image(
    case_id INT NOT NULL,
    image_id INT NOT NULL,
    PRIMARY KEY (case_id, image_id),
    CONSTRAINT fk_miaiq_case_image_case FOREIGN KEY (case_id) REFERENCES miaiq.case(id),
    CONSTRAINT fk_miaiq_case_image_image FOREIGN KEY (image_id) REFERENCES miaiq.image(id)
);
COMMENT ON TABLE miaiq.case IS 'Associates cases with images.';


CREATE TABLE IF NOT EXISTS miaiq.image_model_output(
    image_id INT NOT NULL,
    model_id INT NOT NULL,
    svg_url miaiq.url_type NOT NULL,
    PRIMARY KEY (image_id, model_id),
    CONSTRAINT fk_miaiq_image_model_output_image FOREIGN KEY (image_id) REFERENCES miaiq.image(id),
    CONSTRAINT fk_miaiq_image_model_output_model FOREIGN KEY (model_id) REFERENCES miaiq.model(id)
);
COMMENT ON TABLE miaiq.image_model_output IS 'Stores all data generated by a specific version of the machine learning model.';
COMMENT ON COLUMN miaiq.image_model_output.svg_url IS 'URL to SVG image.';


CREATE TABLE IF NOT EXISTS miaiq.case_revision(
    id INT GENERATED BY DEFAULT AS IDENTITY,
    modified_at TIMESTAMP NOT NULL,
    modified_by INT,
    case_id INT NOT NULL,
    model_id INT NOT NULL,
    revision INT NOT NULL,
    PRIMARY KEY (id),
    UNIQUE (case_id, model_id, revision),
    CONSTRAINT fk_miaiq_case_revision_study FOREIGN KEY (case_id) REFERENCES miaiq.case(id),
    CONSTRAINT fk_miaiq_case_revision_model FOREIGN KEY (model_id) REFERENCES miaiq.model(id),
    CONSTRAINT fk_miaiq_case_revision_user FOREIGN KEY (modified_by) REFERENCES miaiq.audit_user(id)
);
CREATE INDEX IF NOT EXISTS ix_miaiq_case_revision_modified_at ON miaiq.case_revision (modified_at);
COMMENT ON TABLE miaiq.case_revision IS 'Stores a history of image evaluation revisions.';
COMMENT ON COLUMN miaiq.case_revision.modified_by IS 'Revision author. May be NULL if the revision was created by the system (e.g. output of the machine learning model).';
COMMENT ON COLUMN miaiq.case_revision.revision IS
    'Revision number. r0 (revision = 0) corresponds to the current revision. r1 is the oldest revision, r2 is the second oldest, etc. '
    'Whenever a new revision is created, the r0 record is updated to revision = MAX(revision) + 1, and the new revision becomes the r0 record.';


CREATE TABLE IF NOT EXISTS miaiq.image_evaluation(
    id INT GENERATED BY DEFAULT AS IDENTITY,
    image_id INT NOT NULL,
    criterion_id SMALLINT,
    adequate BOOLEAN,
    PRIMARY KEY (id),
    CONSTRAINT fk_miaiq_evaluation_image FOREIGN KEY (image_id) REFERENCES miaiq.image(id),
    CONSTRAINT fk_miaiq_evaluation_criterion FOREIGN KEY (criterion_id) REFERENCES miaiq.criterion(id)
);
CREATE INDEX IF NOT EXISTS ix_miaiq_image_evaluation_image ON miaiq.image_evaluation (image_id);
COMMENT ON TABLE miaiq.image_evaluation IS 'Captures evaluation results for a specific image broken down by criteria.';
COMMENT ON COLUMN miaiq.image_evaluation.criterion_id IS 'Criterion the evaluation pertains to. May be NULL if it pertains to the overall image.';


CREATE TABLE IF NOT EXISTS miaiq.case_revision_image_evaluation(
    case_revision_id INT NOT NULL,
    image_evaluation_id INT NOT NULL,
    PRIMARY KEY (case_revision_id, image_evaluation_id),
    CONSTRAINT fk_miaiq_case_revision_image_evaluation_case_revision FOREIGN KEY (case_revision_id) REFERENCES miaiq.case_revision(id),
    CONSTRAINT fk_miaiq_case_revision_image_evaluation_image_evaluation FOREIGN KEY (image_evaluation_id) REFERENCES miaiq.image_evaluation(id)
);
COMMENT ON TABLE miaiq.case_revision_image_evaluation IS
    'Each study revision record is associated with 4 x (n + 1) evaluation entries (4 for all image laterality/view combinations, n for number of criteria, and 1 for the overall image assessment). '
    'Related images must form a complete study as per `miaiq.study`. Related revisions must correspond to the same model version.';
